---
- hosts: main
  become: yes
    
  tasks: 
    
    - name: Include
      include_vars:
        file: Users/privvars.yml
    
    - name: Install curl
      apt: 
        name: curl
        state: present
        update_cache: yes
        
    - name: Enable UFW
      community.general.ufw:
        state: enabled
        
    - name: Allow TCP 80
      community.general.ufw:
        rule: allow
        port: '80'
        proto: tcp
        
    - name: Allow TCP 8888
      community.general.ufw:
        rule: allow
        port: '8888'
        proto: tcp
        
    - name: Allow TCP 1467
      community.general.ufw:
        rule: allow
        port: '1467'
        proto: tcp
    
    - name: Change SSH port
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#Port 22'
        line: 'Port 1467'
    
    - name: Allow key SSH auth
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#PubkeyAuthentication yes'
        line: 'PubkeyAuthentication yes'
     
    - name: Add User1
      ansible.builtin.user:
        name: "{{ users[0] }}"
        generate_ssh_key: yes
        
    - name: Add User2
      ansible.builtin.user:
        name: "{{ users[1] }}"
        generate_ssh_key: yes
        
    - name: Add User3
      ansible.builtin.user:
        name: "{{ users[2] }}"
        generate_ssh_key: yes
    
    - name: Add Key to User1
      ansible.posix.authorized_key:
        user: "{{ users[0] }}"
        state: present
        key: "{{ publickey }}"
        
    - name: Add Key to User2
      ansible.posix.authorized_key:
        user: "{{ users[1] }}"
        state: present
        key: "{{ publickey }}"
        
    - name: Add Key to User3
      ansible.posix.authorized_key:
        user: "{{ users[2] }}"
        state: present
        key: "{{ publickey }}"
   
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
    
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
      
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present 
        
    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
      
    - name: Execute Docker Compose Install script
      script: docker-compose.sh
    
    - name: Create a directory
      ansible.builtin.file:
        path: /skillcloud-ngsite
        state: directory
        mode: '0755'
        
    - name: Copy necessary files1
      ansible.builtin.copy:
        src: Dockerfile-balance
        dest: /skillcloud-ngsite
        remote_src: yes
        validate: /usr/sbin/visudo -csf %s
        
    - name: Copy necessary files2
      ansible.builtin.copy:
        src: Dockerfile-site
        dest: /skillcloud-ngsite
        remote_src: yes
        validate: /usr/sbin/visudo -csf %s
        
    - name: Copy necessary files3
      ansible.builtin.copy:
        src: index.html
        dest: /skillcloud-ngsite
        remote_src: yes
        validate: /usr/sbin/visudo -csf %s
        
    - name: Copy necessary files4
      ansible.builtin.copy:
        src: balance.conf
        dest: /skillcloud-ngsite
        remote_src: yes
        validate: /usr/sbin/visudo -csf %s
        
    - name: Restart UFW
      ansible.builtin.service:
        name: ufw
        state: restarted
    
    - name: Restart SSH
      ansible.builtin.service:
        name: sshd
        state: restarted
        
    - name: Reboot
      reboot:
        
      
